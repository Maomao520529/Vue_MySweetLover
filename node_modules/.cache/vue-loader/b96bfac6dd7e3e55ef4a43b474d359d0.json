{"remainingRequest":"D:\\作品集\\Vue_MySweetLover\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\作品集\\Vue_MySweetLover\\src\\components\\AlertMessage.vue?vue&type=style&index=0&scope=true&lang=css&","dependencies":[{"path":"D:\\作品集\\Vue_MySweetLover\\src\\components\\AlertMessage.vue","mtime":1580890501000},{"path":"D:\\作品集\\Vue_MySweetLover\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\作品集\\Vue_MySweetLover\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\作品集\\Vue_MySweetLover\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\作品集\\Vue_MySweetLover\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\作品集\\Vue_MySweetLover\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1lc3NhZ2UtYWxlcnQgewogIHBvc2l0aW9uOiBmaXhlZDsKICBtYXgtd2lkdGg6IDUwJTsKICB0b3A6IDU2cHg7CiAgcmlnaHQ6IDIwcHg7CiAgei1pbmRleDogMTEwMDsKfQo="},{"version":3,"sources":["AlertMessage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AlertMessage.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"message-alert\">\n    <div class=\"alert alert-dismissible\"\n      :class=\"'alert-' + item.status\"\n      v-for=\"(item, i) in messages\" :key=\"i\">\n      {{ item.message }}\n      <button type=\"button\" class=\"close\" @click=\"removeMessage(i)\" aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Navbar',\n  data () {\n    return {\n      messages: []\n    }\n  },\n  methods: {\n    updateMessage (message, status) {\n      const timestamp = Math.floor(new Date() / 1000)\n      this.messages.push({\n        message,\n        status,\n        timestamp\n      })\n      this.removeMessageWithTiming(timestamp)\n    },\n    removeMessage (num) {\n      this.messages.splice(num, 1)\n    },\n    removeMessageWithTiming (timestamp) {\n      const vm = this\n      setTimeout(() => {\n        vm.messages.forEach((item, i) => {\n          if (item.timestamp === timestamp) {\n            vm.messages.splice(i, 1)\n          }\n        })\n      }, 5000)\n    }\n  },\n  created () {\n    const vm = this\n    // 外層使用 $on() 來註冊事件\n    // 內層使用 $emit() 來觸發\n    vm.$bus.$on('message:push', (message, status = 'warning') => {\n      vm.updateMessage(message, status)\n    })\n  }\n}\n</script>\n\n<style scope>\n.message-alert {\n  position: fixed;\n  max-width: 50%;\n  top: 56px;\n  right: 20px;\n  z-index: 1100;\n}\n</style>\n"]}]}